@model SEP_FingerPrint.Models.ChangePasswordViewModel

@{
    ViewBag.Title = "Đổi mật khẩu";
    Layout = "~/Views/Shared/_Layout.cshtml";
    if (Session["ID"] == null)
    {
        Response.Redirect("~/Home/Login");
    }
}
<head>
    <script src='~/CustomLib/Schedule/lib/jquery.min.js'></script>
</head>
<!--Body-->

<div class="page-wrapper">
    <!-- Bread crumb -->
    <div class="row page-titles">
        <div class="col-md-5 align-self-center">
            <h3 class="text-primary">Đổi Mật Khẩu</h3>
        </div>
        @*<div class="col-md-7 align-self-center">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="javascript:void(0)">Trang chủ</a></li>
                <li class="breadcrumb-item active">Đổi Mật Khẩu</li>
            </ol>
        </div>*@
    </div>
    <!-- End Bread crumb -->

    <div class="container-fluid">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "control-label col-md-5" })
            
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-5" })
                
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-5" })
               
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Change Password" class="btn btn-default" />
                </div>
            </div>
            <div class="form-group col-md-10">
                @{ string mess = Session["CPMessage"] as string;
                    if (mess != null)
                    {
                        <div style="color:black; font-size: 15px" class="alert alert-warning" role="alert">
                            <p>@mess</p>
                        </div>
                        Session.Remove("CPMessage");

                    }
                }
            </div>

        }

    </div>





</div>
<!--End Body-->